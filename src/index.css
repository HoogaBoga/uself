/*
  Corrected and Optimized CSS for Tailwind v4
*/

/* STEP 1: Import Tailwind. This must be the first rule. */
@import "tailwindcss";

/*
  STEP 2: Define all base CSS variables for light and dark modes.
  This block should be at the top level, NOT inside a layer.
*/
:root {
  --background: 240 10% 3.9%;
  --foreground: 0 0% 98%;
  --card: 240 10% 3.9%;
  --card-foreground: 0 0% 98%;
  --popover: 240 10% 3.9%;
  --popover-foreground: 0 0% 98%;
  --primary: 220 70% 60%;
  --primary-foreground: 0 0% 98%;
  --secondary: 220 20% 25%;
  --secondary-foreground: 0 0% 98%;
  --muted: 220 15% 20%;
  --muted-foreground: 220 10% 65%;
  --accent: 220 25% 30%;
  --accent-foreground: 0 0% 98%;
  --destructive: 0 62.8% 30.6%;
  --destructive-foreground: 0 0% 98%;
  --border: 220 15% 20%;
  --input: 220 15% 20%;
  --ring: 220 70% 60%;
  --radius: 1rem;

  /* Custom Portfolio Colors - Blue Palette */
  --physical: 210 85% 55%;
  --material: 200 70% 50%;
  --sexual: 240 80% 60%;
  --political: 220 85% 50%;
  --digital: 190 90% 45%;
  --spiritual: 260 75% 65%;

  /* Gradients */
  --gradient-hero: linear-gradient(
    135deg,
    hsl(var(--primary)),
    hsl(var(--spiritual))
  );
  --gradient-physical: linear-gradient(
    135deg,
    hsl(var(--physical)),
    hsl(210 75% 45%)
  );
  --gradient-material: linear-gradient(
    135deg,
    hsl(var(--material)),
    hsl(200 60% 40%)
  );
  --gradient-sexual: linear-gradient(
    135deg,
    hsl(var(--sexual)),
    hsl(240 70% 50%)
  );
  --gradient-political: linear-gradient(
    135deg,
    hsl(var(--political)),
    hsl(220 75% 40%)
  );
  --gradient-digital: linear-gradient(
    135deg,
    hsl(var(--digital)),
    hsl(190 80% 35%)
  );
  --gradient-spiritual: linear-gradient(
    135deg,
    hsl(var(--spiritual)),
    hsl(260 65% 55%)
  );

  /* Shadows */
  --shadow-glow: 0 0 40px hsl(var(--primary) / 0.3);
  --shadow-card: 0 10px 30px -10px hsl(0 0% 0% / 0.3);

  /* Sidebar Light Mode */
  --sidebar-background: 0 0% 98%;
  --sidebar-foreground: 240 5.3% 26.1%;
  --sidebar-primary: 240 5.9% 10%;
  --sidebar-primary-foreground: 0 0% 98%;
  --sidebar-accent: 240 4.8% 95.9%;
  --sidebar-accent-foreground: 240 5.9% 10%;
  --sidebar-border: 220 13% 91%;
  --sidebar-ring: 217.2 91.2% 59.8%;
}

.dark {
  --background: 222.2 84% 4.9%;
  --foreground: 210 40% 98%;
  --card: 222.2 84% 4.9%;
  --card-foreground: 210 40% 98%;
  --popover: 222.2 84% 4.9%;
  --popover-foreground: 210 40% 98%;
  --primary: 210 40% 98%;
  --primary-foreground: 222.2 47.4% 11.2%;
  --secondary: 217.2 32.6% 17.5%;
  --secondary-foreground: 210 40% 98%;
  --muted: 217.2 32.6% 17.5%;
  --muted-foreground: 215 20.2% 65.1%;
  --accent: 217.2 32.6% 17.5%;
  --accent-foreground: 210 40% 98%;
  --destructive: 0 62.8% 30.6%;
  --destructive-foreground: 210 40% 98%;
  --border: 217.2 32.6% 17.5%;
  --input: 217.2 32.6% 17.5%;
  --ring: 212.7 26.8% 83.9%;

  /* Sidebar Dark Mode */
  --sidebar-background: 240 5.9% 10%;
  --sidebar-foreground: 240 4.8% 95.9%;
  --sidebar-primary: 224.3 76.3% 48%;
  --sidebar-primary-foreground: 0 0% 100%;
  --sidebar-accent: 240 3.7% 15.9%;
  --sidebar-accent-foreground: 240 4.8% 95.9%;
  --sidebar-border: 240 3.7% 15.9%;
  --sidebar-ring: 217.2 91.2% 59.8%;
}

/*
  STEP 3: Define theme utilities. This is where you create classes from your variables.
*/
@theme {
  /* This configures the built-in `.container` class */
  --container-padding: 2rem;
  --container-center: true;
  --container-max-width: 1400px;

  /* Colors */
  --color-border: hsl(var(--border));
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));
  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));
  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));
  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));
  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));
  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));
  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));
  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));
  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));

  /* Custom Sidebar Colors */
  --color-sidebar: hsl(var(--sidebar-background));
  --color-sidebar-foreground: hsl(var(--sidebar-foreground));
  --color-sidebar-primary: hsl(var(--sidebar-primary));
  --color-sidebar-primary-foreground: hsl(var(--sidebar-primary-foreground));
  --color-sidebar-accent: hsl(var(--sidebar-accent));
  --color-sidebar-accent-foreground: hsl(var(--sidebar-accent-foreground));
  --color-sidebar-border: hsl(var(--sidebar-border));
  --color-sidebar-ring: hsl(var(--sidebar-ring));

  /* Custom Thematic Colors */
  --color-physical: hsl(var(--physical));
  --color-material: hsl(var(--material));
  --color-sexual: hsl(var(--sexual));
  --color-political: hsl(var(--political));
  --color-digital: hsl(var(--digital));
  --color-spiritual: hsl(var(--spiritual));

  /* Background Images */
  --background-image-gradient-hero: var(--gradient-hero);
  --background-image-gradient-physical: var(--gradient-physical);
  --background-image-gradient-material: var(--gradient-material);
  --background-image-gradient-sexual: var(--gradient-sexual);
  --background-image-gradient-political: var(--gradient-political);
  --background-image-gradient-digital: var(--gradient-digital);
  --background-image-gradient-spiritual: var(--gradient-spiritual);

  /* Box Shadows */
  --box-shadow-glow: var(--shadow-glow);
  --box-shadow-card: var(--shadow-card);

  /* Border Radius */
  --border-radius-lg: var(--radius);
  --border-radius-md: calc(var(--radius) - 2px);
  --border-radius-sm: calc(var(--radius) - 4px);

  /* Animations */
  --animation-accordion-down: accordion-down 0.2s ease-out;
  --animation-accordion-up: accordion-up 0.2s ease-out;
}

/*
  STEP 4: Define Keyframes. These are standard CSS.
*/
@keyframes accordion-down {
  from {
    height: 0;
  }
  to {
    height: var(--radix-accordion-content-height);
  }
}

@keyframes accordion-up {
  from {
    height: var(--radix-accordion-content-height);
  }
  to {
    height: 0;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/*
  STEP 5: Apply base styles and add custom utilities using layers.
*/
@layer base {
  * {
    @apply border-border;
  }
  html {
    scroll-behavior: smooth;
  }
  body {
    @apply bg-background text-foreground;
  }
}

@layer utilities {
  .animate-fade-in {
    animation: fadeIn 0.6s ease-out forwards;
    opacity: 0;
  }
}
